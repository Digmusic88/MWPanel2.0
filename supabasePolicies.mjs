/**
 * Ejecuta este script una sola vez.
 * Establece pol√≠ticas RLS amplias para desarrollo.
 * Usa la SERVICE_ROLE_KEY ‚Äì NO la compartas en el repositorio p√∫blico.
 */
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.SUPABASE_URL;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Error: SUPABASE_URL y SUPABASE_SERVICE_ROLE_KEY son requeridas');
  console.log('Aseg√∫rate de tener estas variables de entorno configuradas:');
  console.log('- SUPABASE_URL');
  console.log('- SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey);

console.log('üîß Actualizando pol√≠ticas RLS para cursos_materias...');

try {
  // 1) Aseg√∫rate de que RLS est√© activado
  const { error: enableRlsError } = await supabase.rpc('sql', {
    query: 'ALTER TABLE public.cursos_materias ENABLE ROW LEVEL SECURITY;'
  });

  if (enableRlsError && !enableRlsError.message.includes('already enabled')) {
    console.error('‚ùå Error habilitando RLS:', enableRlsError);
  } else {
    console.log('‚úÖ RLS habilitado en cursos_materias');
  }

  // 2) Elimina pol√≠ticas antiguas si existieran
  const dropPoliciesQueries = [
    'DROP POLICY IF EXISTS "allow all dev" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "authenticated_users_can_read_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admin_teacher_can_insert_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admin_teacher_can_update_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admin_can_delete_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admins_can_insert_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admins_can_update_cursos_materias" ON public.cursos_materias;',
    'DROP POLICY IF EXISTS "admins_can_delete_cursos_materias" ON public.cursos_materias;'
  ];

  for (const query of dropPoliciesQueries) {
    const { error } = await supabase.rpc('sql', { query });
    if (error && !error.message.includes('does not exist')) {
      console.warn('‚ö†Ô∏è Advertencia eliminando pol√≠tica:', error.message);
    }
  }

  console.log('‚úÖ Pol√≠ticas antiguas eliminadas');

  // 3) Pol√≠tica de desarrollo: permite cualquier acci√≥n a usuarios autenticados
  const createPolicyQuery = `
    CREATE POLICY "allow all dev"
      ON public.cursos_materias
      FOR ALL
      USING (auth.role() = 'authenticated')
      WITH CHECK (auth.role() = 'authenticated');
  `;

  const { error: createPolicyError } = await supabase.rpc('sql', {
    query: createPolicyQuery
  });

  if (createPolicyError) {
    console.error('‚ùå Error creando pol√≠tica:', createPolicyError);
    process.exit(1);
  }

  console.log('‚úÖ Nueva pol√≠tica "allow all dev" creada');
  console.log('‚úÖ Pol√≠ticas RLS actualizadas correctamente');
  console.log('');
  console.log('üéâ Ahora puedes usar el CRUD de cursos y materias sin problemas de RLS');
  console.log('');
  console.log('‚ö†Ô∏è  IMPORTANTE: Esta es una pol√≠tica de desarrollo amplia.');
  console.log('   Para producci√≥n, considera pol√≠ticas m√°s restrictivas.');

} catch (error) {
  console.error('‚ùå Error ejecutando script:', error);
  process.exit(1);
}

process.exit(0);